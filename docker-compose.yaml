services:
  # Base image containing dependencies.
  base:
    image: ${PROJECT_NAME}:base
    build:
      context: .
      dockerfile: ./docker/Dockerfile
      args:
        ROS_DISTRO: humble
      target: base
    # Interactive shell
    stdin_open: true
    tty: true
    # Networking and IPC for ROS 2
    network_mode: host
    ipc: host
    # Needed to display graphical applications
    environment:
      # Allows graphical programs in the container.
      - DISPLAY=${DISPLAY}
      - QT_X11_NO_MITSHM=1
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=all
    runtime: nvidia
    privileged: true
    volumes:
      # Allows graphical programs in the container.
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      - ${XAUTHORITY:-$HOME/.Xauthority}:/root/.Xauthority
      - /dev/dri:/dev/dri:rw
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  # Overlay image containing the example source code.
  overlay:
    extends: base
    image: ${PROJECT_NAME}:overlay
    build:
      context: .
      dockerfile: ./docker/Dockerfile
      target: overlay

  # Developer container
  dev:
    extends: overlay
    image: ${PROJECT_NAME}:dev
    build:
      context: .
      dockerfile: ./docker/Dockerfile
      target: dev
      args:
        - UID=${UID:-1000}
        - GID=${UID:-1000}
        - USERNAME=${USERNAME:-devuser}

    volumes:
      # Mount the source code
      - ${DATA_DIR_LOCAL}:/overlay_ws/data/:rw
      - ${OUTPUT_DIR_LOCAL}:/overlay_ws/output/:rw

    user: ${USERNAME:-devuser}

    devices:
    - /dev/bus/usb:/dev/bus/usb  # Mount all USB devices to the container.
    
    command: bash -c "sudo chmod 777 -R /overlay_ws/ && exec sleep infinity"
  
  #viz:
    #extends: dev
    #command: rviz -d /overlay_ws/src/some_folder/rviz.rviz  